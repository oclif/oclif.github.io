"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7187],{745:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var o=i(4848),t=i(8453);const l={title:"Plugin Loading"},s=void 0,r={id:"plugin_loading",title:"Plugin Loading",description:"Below is a diagram that outlines how a plugin is loaded into the CLI.",source:"@site/../docs/plugin_loading.md",sourceDirName:".",slug:"/plugin_loading",permalink:"/docs/plugin_loading",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/plugin_loading.md",tags:[],version:"current",lastUpdatedBy:"Mike Donnalley",lastUpdatedAt:1748883586e3,frontMatter:{title:"Plugin Loading"},sidebar:"docs",previous:{title:"Command Execution",permalink:"/docs/command_execution"},next:{title:"Examples",permalink:"/docs/examples"}},a={},d=[{value:"Plugin Resolution Order",id:"plugin-resolution-order",level:3},{value:"Manifests Improve Performance",id:"manifests-improve-performance",level:3},{value:"Plugin Loading Diagram",id:"plugin-loading-diagram",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Below is a diagram that outlines how a plugin is loaded into the CLI."}),"\n",(0,o.jsx)(n.p,{children:"There are a couple of important takeaways from this diagram:"}),"\n",(0,o.jsx)(n.h3,{id:"plugin-resolution-order",children:"Plugin Resolution Order"}),"\n",(0,o.jsx)(n.p,{children:"Plugins are resolved in the following order:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"User plugins (i.e. plugins installed by the users)"}),"\n",(0,o.jsxs)(n.li,{children:["Dev plugins (i.e. plugins listed under ",(0,o.jsx)(n.code,{children:"devPlugins"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Core plugins (i.e. plugins listed under ",(0,o.jsx)(n.code,{children:"plugins"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"manifests-improve-performance",children:"Manifests Improve Performance"}),"\n",(0,o.jsxs)(n.p,{children:["When loading a plugin, oclif needs to require each command file in order to get the static properties of the command - the ",(0,o.jsx)(n.code,{children:"description"}),", ",(0,o.jsx)(n.code,{children:"examples"}),", ",(0,o.jsx)(n.code,{children:"flags"}),", etc..."]}),"\n",(0,o.jsxs)(n.p,{children:["However, oclif can skip this step if the plugin has an ",(0,o.jsx)(n.code,{children:"oclif.manifest.json"})," (generated by ",(0,o.jsx)(n.code,{children:"oclif manifest"}),"). The manifest caches all of these properties so that there's no need to require every single command on every command execution."]}),"\n",(0,o.jsx)(n.h2,{id:"plugin-loading-diagram",children:"Plugin Loading Diagram"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"plugin loading",src:i(4893).A+"",width:"8787",height:"5576"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},4893:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/plugin-loading-63d248baba4db7ba0a9340ef6b0c0856.jpg"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(6540);const t={},l=o.createContext(t);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);