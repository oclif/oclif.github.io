"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2961],{2331:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=s(4848),o=s(8453);const t={title:"Commands"},i=void 0,d={id:"commands",title:"Commands",description:"A basic command looks like the following in TypeScript:",source:"@site/../docs/commands.md",sourceDirName:".",slug:"/commands",permalink:"/docs/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/commands.md",tags:[],version:"current",lastUpdatedBy:"Mike Donnalley",lastUpdatedAt:1734722012e3,frontMatter:{title:"Commands"},sidebar:"docs",previous:{title:"API Reference",permalink:"/docs/api_reference"},next:{title:"Command Arguments",permalink:"/docs/args"}},c={},l=[{value:"Avoiding Timeouts",id:"avoiding-timeouts",level:3},{value:"Other Command Options",id:"other-command-options",level:3},{value:"Command Methods",id:"command-methods",level:2},{value:"<code>this.log(message: string)</code>",id:"thislogmessage-string",level:3},{value:"<code>this.warn(message: string | Error)</code>",id:"thiswarnmessage-string--error",level:3},{value:"<code>this.error(message: string | Error, options?: {code?: string, exit?: number, ref?: string; suggestions?: string[];})</code>",id:"thiserrormessage-string--error-options-code-string-exit-number-ref-string-suggestions-string",level:3},{value:"<code>this.exit(code: number = 0)</code>",id:"thisexitcode-number--0",level:3},{value:"<code>this.logToStderr(message: string)</code>",id:"thislogtostderrmessage-string",level:3},{value:"<code>this.jsonEnabled()</code>",id:"thisjsonenabled",level:3},{value:"<code>this.toSuccessJson(result: unknown)</code>",id:"thistosuccessjsonresult-unknown",level:3},{value:"<code>this.toErrorJson(result: unknown)</code>",id:"thistoerrorjsonresult-unknown",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"A basic command looks like the following in TypeScript:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {Command} from '@oclif/core'\n\nexport class MyCommand extends Command {\n  static description = 'description of this example command'\n\n  async run(): Promise<void> {\n    console.log('running my command')\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The only part that is required is the run function. Accept user input with ",(0,r.jsx)(n.a,{href:"/docs/args",children:"arguments"})," and ",(0,r.jsx)(n.a,{href:"/docs/flags",children:"flags"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"In JavaScript:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const {Command} = require('@oclif/core')\n\nclass MyCommand extends Command {\n  async run() {\n    console.log('running my command')\n  }\n}\n\nMyCommand.description = 'description of this example command'\n\nmodule.exports = MyCommand\n"})}),"\n",(0,r.jsx)(n.p,{children:"Note that the following examples will be in TypeScript. As JavaScript does not yet have static class properties, you will have to add them to the class after it is declared like we did with the description above."}),"\n",(0,r.jsx)(n.h3,{id:"avoiding-timeouts",children:"Avoiding Timeouts"}),"\n",(0,r.jsxs)(n.p,{children:["In order to avoid command executions running indefinitely, oclif will terminate the node process 10 seconds after ",(0,r.jsx)(n.code,{children:"Command.run"})," resolves. This means that all command logic inside the ",(0,r.jsx)(n.code,{children:"run"})," method should either run synchronously or should return a ",(0,r.jsx)(n.code,{children:"Promise"}),". This will allow the entire command to run before the 10 second timeout starts."]}),"\n",(0,r.jsxs)(n.p,{children:["In other words, ",(0,r.jsxs)(n.strong,{children:["if you execute a promise in ",(0,r.jsx)(n.code,{children:"Command.run"})," without a awaiting it, then the command will likely timeout before it's completed."]})]}),"\n",(0,r.jsx)(n.h3,{id:"other-command-options",children:"Other Command Options"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/oclif/core/blob/main/src/command.ts",children:"See the base class to get an idea of what methods can be called on a command"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {Command, Flags} from '@oclif/core'\n\nexport class MyCommand extends Command {\n  static summary = 'A brief overview of your command.'\n  static description = `\nAn in-depth description of the command.\nIt can be multiline.\n`\n\n  // hide the command from help\n  static hidden = false\n\n  // custom usage string for help\n  // this overrides the default usage\n  static usage = 'mycommand --myflag'\n\n  // examples to add to help\n  // <%= config.bin %> resolves to the executable name\n  // <%= command.id %> resolves to the command name\n  static examples = [\n    // Examples can be simple strings\n    '<%= config.bin %> <%= command.id %> --help',\n    // Or objects that provide a description of the example command\n    {\n      description: 'Force the command to execute',\n      command: '<%= config.bin %> <%= command.id %> --force',\n    }\n  ]\n\n  // this makes the parser not fail when it receives invalid arguments\n  // defaults to true\n  // set it to false if you need to accept a variable number of arguments\n  static strict = false\n\n  // define aliases that can execute this command.\n  static aliases = ['alternate:name:for:this:command']\n\n  // Set to true if you want to add the --json flag to your command.\n  // oclif will automatically suppress logs (if you use this.log, this.warn, or this.error) and\n  // display the JSON returned by the command's run method.\n  static enableJsonFlag = true\n\n  async run() {\n    // show a warning\n    this.warn('uh oh!')\n    // exit with an error message\n    this.error('uh oh!!!')\n    // exit with status code\n    this.exit(1)\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"command-methods",children:"Command Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#command-methods",children:"Command Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thislogmessage-string",children:(0,r.jsx)(n.code,{children:"this.log(message: string)"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thiswarnmessage-string--error",children:(0,r.jsx)(n.code,{children:"this.warn(message: string | Error)"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thiserrormessage-string--error-options-code-string-exit-number-ref-string-suggestions-string",children:(0,r.jsx)(n.code,{children:"this.error(message: string | Error, options?: {code?: string, exit?: number, ref?: string; suggestions?: string[];})"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thisexitcode-number--0",children:(0,r.jsx)(n.code,{children:"this.exit(code: number = 0)"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thislogtostderrmessage-string",children:(0,r.jsx)(n.code,{children:"this.logToStderr(message: string)"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thisjsonenabled",children:(0,r.jsx)(n.code,{children:"this.jsonEnabled()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thistosuccessjsonresult-unknown",children:(0,r.jsx)(n.code,{children:"this.toSuccessJson(result: unknown)"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#thistoerrorjsonresult-unknown",children:(0,r.jsx)(n.code,{children:"this.toErrorJson(result: unknown)"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The following assumes you are in the ",(0,r.jsx)(n.code,{children:"run()"})," method of an oclif ",(0,r.jsx)(n.a,{href:"/docs/commands",children:"command"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"thislogmessage-string",children:(0,r.jsx)(n.code,{children:"this.log(message: string)"})}),"\n",(0,r.jsxs)(n.p,{children:["Output message to stdout (non-blocking). ",(0,r.jsx)(n.code,{children:"console.log()"})," works fine too, but that is a blocking call and won't be automatically suppressed when the ",(0,r.jsx)(n.code,{children:"--json"})," flag is present. This uses ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/util.html#util_util_format_format_args",children:"util.format()"})," which behaves the same as ",(0,r.jsx)(n.code,{children:"console.log()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"this.log('hello, world!')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"thiswarnmessage-string--error",children:(0,r.jsx)(n.code,{children:"this.warn(message: string | Error)"})}),"\n",(0,r.jsx)(n.p,{children:"Display an error or message as a warning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"this.warn('uh oh!')\nthis.warn(new Error('uh oh!'))\n"})}),"\n",(0,r.jsx)(n.h3,{id:"thiserrormessage-string--error-options-code-string-exit-number-ref-string-suggestions-string",children:(0,r.jsx)(n.code,{children:"this.error(message: string | Error, options?: {code?: string, exit?: number, ref?: string; suggestions?: string[];})"})}),"\n",(0,r.jsx)(n.p,{children:"Display error and exit. Also add a code to error object or exit status."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"this.error('uh oh!', {exit: 2})\nthis.error(new Error('uh oh!'))\n"})}),"\n",(0,r.jsx)(n.p,{children:"The options object has the following options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"exit"})," \u2014 exit code to use"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"code"})," \u2014 a unique error code for the type of error"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"suggestions"})," \u2014  an array of suggestions for a user to try next that may be useful or provide additional context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ref"})," \u2014 a url to documentation related to this error or fixing it"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"message"}),", ",(0,r.jsx)(n.code,{children:"code"}),", ",(0,r.jsx)(n.code,{children:"suggestions"}),", ",(0,r.jsx)(n.code,{children:"ref"})," properties will be displayed when an error is shown. Reusable ",(0,r.jsx)(n.code,{children:"Error"})," classes can be created that display the optional outputs above by implementing the ",(0,r.jsx)(n.code,{children:"PrettyPrintableError"})," interface from the ",(0,r.jsx)(n.code,{children:"Errors"})," namespace from ",(0,r.jsx)(n.code,{children:"@oclif/core"})," and ",(0,r.jsx)(n.code,{children:"this.error"})," will handle them appropriately."]}),"\n",(0,r.jsxs)(n.p,{children:["These errors are friendly and won't show a traceback unless debugging is enabled with ",(0,r.jsx)(n.code,{children:"DEBUG=*"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {CLIError} from '@oclif/errors'\n\nthrow new CLIError('my friendly error')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Any error caught by the command of this ",(0,r.jsx)(n.code,{children:"CLIError"})," type will be shown without traceback."]}),"\n",(0,r.jsx)(n.h3,{id:"thisexitcode-number--0",children:(0,r.jsx)(n.code,{children:"this.exit(code: number = 0)"})}),"\n",(0,r.jsx)(n.p,{children:"Exit process. Defaults to status 0."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"this.exit()\nthis.exit(1)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"thislogtostderrmessage-string",children:(0,r.jsx)(n.code,{children:"this.logToStderr(message: string)"})}),"\n",(0,r.jsxs)(n.p,{children:["Log a message to the terminal's ",(0,r.jsx)(n.code,{children:"stderr"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"thisjsonenabled",children:(0,r.jsx)(n.code,{children:"this.jsonEnabled()"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns to ",(0,r.jsx)(n.code,{children:"true"})," if the ",(0,r.jsx)(n.code,{children:"--json"})," flag is present and ",(0,r.jsx)(n.code,{children:"enableJsonFlag"})," is set to ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsx)(n.h3,{id:"thistosuccessjsonresult-unknown",children:(0,r.jsx)(n.code,{children:"this.toSuccessJson(result: unknown)"})}),"\n",(0,r.jsx)(n.p,{children:"Modify the command's success JSON output before it's displayed to the user."}),"\n",(0,r.jsx)(n.h3,{id:"thistoerrorjsonresult-unknown",children:(0,r.jsx)(n.code,{children:"this.toErrorJson(result: unknown)"})}),"\n",(0,r.jsx)(n.p,{children:"Modify the command's error JSON output before it's displayed to the user."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var r=s(6540);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);